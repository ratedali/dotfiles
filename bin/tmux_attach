#!/usr/bin/env bash

# usage: tmux_attach [-n] [TARGET_SESSION] [TARGET_WINDOW] [EXECUTABLE]
#
# opens a new terminal and attaches to the first available
# detached session matching the specified filters.
#
# if a detached session doesn't exist the script creates 
# a new session with the specified attributes, and 
# immediately starts EXECUTABLE
#
# if -n is specified, no new session or window will be created

#         DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                 Version 2, December 2004
#
# Copyright 2016 Ali Salah
#
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
#
#         DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
# TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
#
#  0. You just DO WHAT THE FUCK YOU WANT TO.

    # Adjust to your preffered terminal
TERMCMD=${TERMCMD:-x-terminal-emulator}
term_execute() {
    echo executing \"env TMUX= $TERMCMD -e $HOME/.bin/tmux_term $*\" >&2
    case $TERMCMD in
        urxvt*)
            exec env TMUX= $TERMCMD -e $HOME/.bin/tmux_term $*
            ;;
        *)
            exec env TMUX= $TERMCMD -e "$HOME/.bin/tmux_term $*"
    esac
}


if [ "$1" == "-n" ]; then
    NO_NEW=1
    SESSION_NAME="$2"
    WINDOW_NAME="$3"
    EXECUTABLE="$4"
else
    NO_NEW=0
    SESSION_NAME="$1"
    WINDOW_NAME="$2"
    EXECUTABLE="$3"
fi

echo "no new?=$NO_NEW" >&2
echo "session=$SESSION_NAME" >&2
echo "window=$WINDOW_NAME" >&2
echo "executable=$EXECUTABLE" >&2

AVAILABLE=$(tmux ls -F "#{session_name}:#{?session_attached,attached,}" | grep "$SESSION_NAME")
if [ -n "$SESSION_NAME" ]; then
    TARGET_SESSION=$(echo "$AVAILABLE" | cut -d: -f1)
    IS_ATTACHED=$(echo "$AVAILABLE" | grep attached | cut -d: -f2)
else
    TARGET_SESSION=$(echo "$AVAILABLE" | grep -v -m1 attached | cut -d: -f1)
fi

echo "available_sessions=\"$AVAILABLE\"" >&2
echo "target_session=\"$TARGET_SESSION\"" >&2
echo "attached?=${IS_ATTACHED:-no}" >&2

WINDOWS=$(tmux list-windows -F "#{window_name}" -t "=$TARGET_SESSION" 2>/dev/null)
TARGET_WINDOW=$(echo "$WINDOWS" | grep -m1 "$WINDOW_NAME")

echo "available_windows=\"$WINDOWS\"" >&2
echo "target_windows=\"$TARGET_WINDOW\"" >&2

if [ -n "$TARGET_SESSION" ]; then
    if [ -n "$SESSION_NAME" ]; then
        if [ -n "$TARGET_WINDOW" -a -z "$IS_ATTACHED" ]; then    
            echo "just attaching : $TARGET_SESSION:$TARGET_WINDOW" >&2
            term_execute attach -t "$TARGET_SESSION:$TARGET_WINDOW" 
        elif [ -n "$TARGET_WINDOW" -a -n "$IS_ATTACHED" ]; then
            echo "selecting window : $TARGET_SESSION:$TARGET_WINDOW" >&2
            term_execute select-window -t "=$TARGET_SESSION:$TARGET_WINDOW"
        elif [ -z "$TARGET_WINDOW" -a -n "$WINDOW_NAME" ]; then
            if [ "$NO_NEW" -eq 0 ]; then
                echo "new window : $TARGET_SESSION:$WINDOW_NAME" >&2
                term_execute new-window -n "$WINDOW_NAME" -t "$TARGET_SESSION:" $EXECUTABLE
                if [ -z "$IS_ATTACHED" ]; then 
                    echo "and attaching" >&2
                    term_execute attach -t "$TARGET_SESSION:$WINDOW_NAME"
                fi
            fi
        fi
    else
        echo "just attaching : $TARGET_SESSION:$TARGET_WINDOW" >&2
        term_execute attach -t "$TARGET_SESSION:$TARGET_WINDOW"
    fi
else
    if [ "$NO_NEW" -eq 0 ]; then

        if [ -n "$SESSION_NAME" -a -n "$WINDOW_NAME" ]; then
            echo "new session : $SESSION_NAME:$WINDOW_NAME" >&2
            term_execute new-session -s "$SESSION_NAME" -n "$WINDOW_NAME" $EXECUTABLE
        elif [ -n "$SESSION_NAME" -a -z "$WINDOW_NAME" ]; then
            echo "new session : session $SESSION_NAME" $EXECUTABLE >&2
            term_execute new-session -s "$SESSION_NAME" $EXECUTABLE
        elif [ -z "$SESSION_NAME" -a -n "$WINDOW_NAME" ]; then
            echo "new session : window $WINDOW_NAME" >&2
            term_execute new-session -n "$WINDOW_NAME" $EXECUTABLE
        else
            echo "new session" >&2
            term_execute new-session $EXECUTABLE
        fi
    fi
fi
